<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_dev.dao.StudentDao">
	<sql id="selectSql">
		select stud_id, name, email, dob,phone
		from students
	</sql>
	
 	<sql id="whereSql">
		<where>
			<if test="studId !=null">
				stud_id=#{studId}
			</if>
		</where>
	
	</sql> 
	
	<sql id="insertSql">
		insert into students(stud_id, name, email, dob, phone)
		values(#{studId},#{name},#{email},#{dob},#{phone})
	</sql>
	
	<sql id="updateSql">
		update students set name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob}
		where stud_id = #{studId}
	</sql>
	
	<sql id="deleteSql">
		delete from students where stud_id = #{studId}
	</sql>
	
	<select id="selectStudentByNo" parameterType="Student" resultType="Student">
		<include refid="selectSql"/>
		where stud_id=#{studId}
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSql"></include>
	</select>
	
	<select id="selectStudentByNoWithAPI" parameterType="Student" resultType="Student">
		<include refid="selectSql"></include>
		where stud_id=#{studId}
	</select>
	
	<select id="selectStudentByAllWithAPI" resultType="Student">
		<include refid="selectSql"></include>
	</select>
	
	<insert id="insertStudent" parameterType="Student">
		<include refid="insertSql"></include>
	</insert>
	
	<insert id="insertStudnetWithAPI" parameterType="Student">
		<include refid="insertSql"></include>
	</insert>
	
	<insert id="insertStudentAutoInc" parameterType="Student" useGeneratedKeys = "true" keyProperty="studId">
		<include refid="insertSql"></include>
	</insert>
	
	<update id="updateStudent">
		<include refid="updateSql"></include>
	</update>
	
	<update id="updateStudentwithAPI">
		<include refid="updateSql"></include>
	</update>
	
	<delete id="deleteStudent">
		<include refid="deleteSql"></include>
	</delete>
	
	<delete id="deleteStudentWithAPI">
		<include refid="deleteSql"></include>
	</delete>
	
	<!-- resultmap -->
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<select id="selectStudentByAllForResultMap"	resultMap="StudentResult">
		<include refid="selectSql"></include>
	</select>
	
	<select id="selectStudentByAllForResultMapWithAPI" resultMap="StudentResult">
		<include refid="selectSql"></include>
	</select>
	
	<!--hashMap-->
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSql"></include>
	</select>
	
	<select id="selectStudentByAllForHashMapWithAPI" resultType="map">
		<include refid="selectSql"></include>
	</select>
	
	<!-- 결과매핑확장 -->
	<!-- <resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap> -->
	
	<resultMap type="Student" id="StudentWithAddressResult"	extends="StudentResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column ="city"/>
		<result property="address.state" column ="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<sql id="selectJoinAddressSql">
		 SELECT STUD_ID, NAME, EMAIL, PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
        FROM STUDENTS S LEFT OUTER JOIN ADDRESSES A ON S.ADDR_ID=A.ADDR_ID
	</sql>
	
	<select id="selectStudentByNoForResultMapExtends" parameterType="Student" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"></include>
			<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByNoForResultMapExtendsWithAPI" parameterType="Student" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	
	<resultMap type="Student" id="StudentAssociation" extends = "StudentResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_dev.dao.AddressDao.AddressResult"></association>
	</resultMap>
	
	<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByNoAssociationAPI" parameterType="Student" resultMap="StudentAssociation">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<sql id="insertEnumStudent">
		INSERT INTO STUDENTS(STUD_ID, NAME, EMAIL, PHONE, DOB, GENDER)
		VALUES(#{studId},#{name},#{email},#{phone},#{dob},#{gender})
	</sql>
	
	<insert id="insertEnumStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
		<include refid="insertEnumStudent"></include>
	</insert>
	
	<insert id="insertEnumStudentWithAPI" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
		<include refid="insertEnumStudent"></include>
	</insert>
	
	
	
	<resultMap type="Student" id="StudentGenderResult"  extends="StudentResult">
    	<result property="gender" column="gender" />
    </resultMap>
	<sql id="selectParameterSql">
        select stud_id, name, email, phone, dob, gender from students
    </sql>
    <sql id="whereNameEmailSql">
        <where>
            <if test="name != null">
                name = #{name}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
        </where>
    </sql>
	<select id="selectAllStudentByParam" resultMap="StudentGenderResult">
        <include refid="selectParameterSql"/>
        where name=#{param1} and email=#{param2}
    </select>
    
    <select id="selectAllStudentByStudent" parameterType="Student" resultMap="StudentGenderResult">
        <include refid="selectParameterSql"/>
        <include refid="whereNameEmailSql"/>
    </select>

    <select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
        <include refid="selectParameterSql"/>
        <include refid="whereNameEmailSql"/>
    </select>
    
    <update id="updateSetStudent">
    	update students
    	<set>
    		<if test="name !=null">name=#{name},</if>
    		<if test="email !=null">email=#{email},</if>
    		<if test="phone !=null">phone=#{phone},</if>
    		<if test="dob !=null">dob=#{dob}</if>
    	</set>
    	<include refid="whereSql"/>
    </update>
</mapper>